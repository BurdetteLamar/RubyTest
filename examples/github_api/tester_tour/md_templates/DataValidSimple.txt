[navigation_links]

# Validating a Simple Data Object

## Example Test

The term _valid_, as used here, is about whether a value is of the correct _form_.  This is as distinguished from the earlier term _equal_, which is about whether the value is _correct_.

For the values of `id` below, for example, the verifications are whether those values are positive integers.

Example of usefulness:  creating a new user returns a `User` object with a new `id` value.  The _value_ of the `id` is unpredictable, but it is still useful to verify that it is a positive integer.

[file_source](../tests/data_valid_simple_test.rb)

Notes:

- In section `This is valid`:
  - A new album with valid values is instantiated.
  - The valid values are not in the test itself, but instead come from the data class.
  - Method `Album.verdict_valid? validates and logs each value in the album.
- In section `This is not valid`:
  - A new album with invalid values is instantiated.
  - The invalid values are not in the test itself, but instead come from the data class.
  - Method `Album.verdict_valid? validates and logs each value in the album.

## Log

[file_source](../logs/test_data_valid_simple.xml)

Notes:

- In section `This is valid`, all verdicts pass.
- When a value has multiple validation verdicts (as all of these do), the verdicts are logged into a separate subsection.
- In section `This is not valid`, three verdicts fail.

[navigation_links]
