[navigation_links]

# Test Sections and Nesting

A test and its log have many duties, but one of the first is their duty to tell a story.

Reading the test code or the log, you should be able to understand how the test is organized, and what it's trying to do.  Nested sections help with that.

## Example Test

[file_source](../tests/sections_test.rb)

Notes:

- Use nested sections to organize test code.
- Use optional argument `:timestamp` to add a timestamp to the logged section.
- Use optional argument `:duration` to add an execution duration to the logged section.
- (This test does not use the client, and so by Ruby convention uses the variable name `_` instead of variable name `client`.)

## Log

[file_source](../logs/test_sections.xml)

Notes:

- The sections in the test are propagated to the log, so that the log is organized the same way as the test.

[navigation_links]
