require 'rexml/document'
include REXML

require_relative '../../lib/helpers/markdown_helper'
require_relative '../../lib/helpers/string_helper'
require_relative '../../lib/helpers/test_helper'

desc 'Build tour'
task :tour do
  rakefile_dir_path = File.dirname(__FILE__)
  tour_dir_path = File.join(
      rakefile_dir_path,
      'tour',
  )
  test_dir_path = File.join(
      tour_dir_path,
      'tests',
  )
  log_dir_path = TestHelper.create_app_log_dir('rest_api')
  template_dir_path = File.join(
      tour_dir_path,
      'md_templates',
  )
  conditioned_log_dir_path = File.join(
      tour_dir_path,
      'logs',
  )
  FileUtils.mkdir_p(conditioned_log_dir_path)
  md_file_dir_path = File.join(
      tour_dir_path,
      'md_files',
  )
  FileUtils.mkdir_p(md_file_dir_path)
  %w/
          nothing
  /.each do |name|
    # Run the test.
    test_file_name = format('%s_test.rb', name)
    test_file_path = File.absolute_path(File.join(
         test_dir_path,
         test_file_name,
    ))
    command = format('ruby %s', test_file_path)
    system(command)
    # Process the log.
    log_file_name = format('test_%s.xml', name)
    log_file_path = File.join(
        log_dir_path,
        log_file_name,
    )
    conditioned_file_path = File.join(
        conditioned_log_dir_path,
        log_file_name,
    )
    doc = nil
    formatter = REXML::Formatters::Pretty.new(2)
    formatter.compact = true
    File.open(log_file_path, 'r') do |file|
      doc = REXML::Document.new(file)
    end
    File.open(conditioned_file_path, 'w') do |file|
      file.puts(formatter.write(doc.root, ''))
    end
    file_basename = format('%sTest', StringHelper.to_upper_camel_case(name))
    md_file_name = format('%s.md', file_basename)
    template_file_name = format('%s.txt', file_basename)
    template_file_path = File.join(
        template_dir_path,
        template_file_name,
    )
    md_file_path = File.join(
        md_file_dir_path,
        md_file_name,
    )
    MarkdownHelper.build_markdown_file(template_file_path, md_file_path)
  end
  FileUtils.rm_rf(conditioned_log_dir_path)

end

desc 'Run examples'
task :examples do
  rakefile_dir_path = File.dirname(__FILE__)
  test_dir_path = File.join(
                          rakefile_dir_path,
                          'tests',
  )
  TestHelper.create_app_log_dir('rest_api')
  %w/
        albums
        comments
        photos
        posts
        todos
        users
    /.each do |name|
    test_file_name = format('%s_test.rb', name)
    test_file_path = File.absolute_path(File.join(
        test_dir_path,
        test_file_name,
    ))
    command = format('ruby %s', test_file_path)
    system(command)
  end

end
